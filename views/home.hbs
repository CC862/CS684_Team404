<!DOCTYPE html>
<style>
  /* Add a black background color to the top navigation */
  /* Style the navigation bar */
.navbar {
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 10px;
  flex-wrap: wrap;
  height: 60px;
}
/* Style the links inside the navigation bar */
.navbar .nav-button {
  position: relative; /* change position to relative */
  float: left;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 13px;
  display: inline-block;
  background-color: blue;
  color: white;
  border: none;
  border: 2px solid blue;
  border-radius: 5px;
  cursor: pointer;
  margin: 0;
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  transition: box-shadow 0.3s ease-in-out;
}
  .container {
    display: grid;
    grid-template-rows: auto 1fr; /* set header and main to auto and 1fr respectively */
    grid-template-columns: 1fr; /* set one column for both header and main */
    height: 100vh; /* set height to 100vh for full page height */
  }
  .header {
    padding: 20px;
    text-align: center;
    background: #741a10;
    color: white;
    font-size: 30px;
  }
  .title {
    font-size: 36px;
    margin: 0;
    padding: 10px; /* add padding to title */
    border: 2px solid#741a10; /* add border to title */
    background-color:#741a10;
    border-bottom: none; /* remove border from bottom of title */
  }
  .main {
    padding: 20px;
  }
  .articles {
    margin-top: 35px;
  }
  .articles h2 {
    font-size: 24px;
    text-align: center;
  }
  .article {
    border: 2px solid #7e7a7a;
    padding: 20px;
    margin-bottom: 20px;
  }
  /*adjusting image display of article */
  .article img {
    max-width: 150%;
    height: 350px
  }
  .article h4 {
    margin: 0;
  }
  .article p {
    margin-top: 10px;
  }

  /*pagination*/
  .pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
  }

  .page-item {
    margin: 0 10px;
  }

  .page-link {
    border-radius: 5px;
    border: 1px solid #ccc;
    padding: 5px 10px;
    color: #333;
    text-decoration: none;
  }

  .page-link:hover {
    background-color: #f2f2f2;
  }

  .page-item.active .page-link {
    background-color: #007bff;
    color: white;
    border-color: #007bff;
  }

  #category-buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
  }

  #category-buttons button {
    margin-right: 10px;
    background-color: #3ab975;
    color: #333;
    border: none;
    border-bottom: 2px solid #ddd;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  #category-buttons button.active {
    background-color: blue;
    color: white;
    border-bottom: 2px solid blue;
  }
  .note {
    font-size: 16px;
    font-weight: bold;
    text-align: center;
  }
   .category, .published-date {
    font-size: 16px;
    font-weight: bold;
  }

  .page-button {
    margin-right: 10px;
  }
 
    #search-form {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #search-form input[type="text"] {
    margin-right: 10px;
  }


  #search-results-button {
    display: none;
  }

  #search-modal {
    display: none; /* Hide modal by default */
    position: fixed;
    z-index: 9999;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow-y: scroll;
    background-color: rgba(0,0,0,0.4);
    
  }


  #search-modal .modal-content h2 {
    font-size: 2rem;
    text-align: center;
  }

  #search-modal .modal-content .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  #search-results{
    width: 100%;
  }

  #search-modal .modal-content{
    width: 95%;
    height: 90%;
    max-width: 2000px;
    max-height: 1000px;
    background-color: #fff;
    padding: 20px;
    margin: 50px auto;
    overflow-y: scroll;
  }

  #search-modal .modal-content .close:hover,
  #search-modal .modal-content .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

  #search-results .article {
    padding: 20px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    background-color: #fff;
    box-shadow: 0 2px 2px rgba(0,0,0,0.2);
  }

  #search-results .article h4 {
    margin-top: 0;
    font-size: 1.6rem;
  }

  #search-results .article img {
    width: 100%;
    height: auto;
  }

  #search-results .article p {
    font-size: 1.4rem;
    margin: 10px 0;
  }

  #search-results .article a {
    display: inline-block;
    font-size: 1.4rem;
    color: #1a0dab;
    text-decoration: none;
    margin-top: 10px;
  }

  #search-results .article a:hover {
    text-decoration: underline;
  }

  #exit-btn,
  #exit-btn-2  {
    display: block;
    margin: 20px auto;
    padding: 10px 20px;
    background-color: #f70707;
    color: #fff;
    font-size: 16px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }

  .containerbtn {
    text-align: center;
    margin-top: 5px;
    border-color: black;
  }

  #advanced-search-btn {
    padding: 5px 10px;
    border: 2px solid green;
    border-radius: 4px;
    cursor: pointer;
  }

  #search-modal .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 20px 0;
  }

  #search-modal .pagination button {
    background-color: #007bff;
    border: none;
    color: #fff;
    padding: 10px;
    margin: 0 10px;
    border-radius: 5px;
    font-size: 1.2rem;
    cursor: pointer;
  }

  #search-modal .pagination button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  #search-modal #page-number {
    margin: 0 10px;
    font-size: 1.2rem;
    font-weight: bold;
    color: #007bff;
  }
  /**/
  #modal-flash {
    margin: 0;
    font-size: 18px;
    font-weight: bold;
    text-align: center;
    margin-bottom: 10px;
  }

  .modal {
    display: flex;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    justify-content: center; /* horizontally center */
    align-items: center; /* vertically center */
    background-color: rgba(0, 0, 0, 0.4);
  }

  .modal-content {
    background-color: white;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 60%; /* value that's smaller than 100% */
    max-width: 600px; /* max-width to prevent it from becoming too wide on larger screens */
  }

</style>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>News Homepage</title>
    <link rel="stylesheet" href="../stylesheets/style.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

  </head>
  <body>
    <div class="container">
      <header class="header">
        <h1 class="title">Welcome to Team404 home page!</h1>
        <p>Today is: <span id="datetime"></span></p>
      </header>

      <nav class="navbar">
        <a href="/signin" class="nav-button">Log In</a>
        <button class="nav-button" id="refresh-button">Refresh</button>
        <a href="/signup" class="nav-button">Sign Up</a>
      </nav>

      <main class="main">
        {{#if success_msg}}
          <div class="alert alert-success" role="alert">{{success_msg}}</div>
        {{/if}}

        <section class="articles">
          <h2>Click a Category to view news, or sign up to  have a custom display of news by your preference!</h2>
          <p class="note" >Note: Home tab displays "General" news</p>
           <form id="search-form">
            <input type="text" name="search" placeholder="Search...">
            <button type="submit">Search</button>
           
          </form>
        <div class="containerbtn">
          <button id="advanced-search-btn">Advanced Search</button>
        </div>

          <div id="search-modal" class="modal">
            <div class="modal-content">
              <button id="exit-btn">Exit Search Results</button>
              <h2>Search Results</h2>
              <div id="search-results"></div>
              <div class="pagination">
                <button id="previous-page" disabled>Previous</button>
                <span id="page-number">Page 1</span>
                <button id="next-page">Next</button>
              </div>
              <button id="exit-btn-2">Exit Search Results</button>
            </div>
          </div>

          <div id="advance-search-modal" class="modal">
            <div class="modal-content">
              <span class="ASclose">&times;</span>
              <h2>Advance Search</h2>
              <form id="advance-search-form">
                <label for="search-input">Search Query:</label>
                <input type="text" id="search-input" name="search" class="search-input" required>
                <br>
                 <input type="text" id="search-input-1" name="search" class="search-input">
                <label for="operator-1">Operator 1:</label>
                <select id="operator-1" class="operator-input">
                  <option value=""></option>
                  <option value="AND">AND</option>
                  <option value="OR">OR</option>
                  <option value="NOT">NOT</option>
                </select>
                
                <br>
                <input type="text" id="search-input-2" name="search" class="search-input">
                <label for="operator-2">Operator 2:</label>
                <select id="operator-2" class="operator-input">
                  <option value=""></option>
                  <option value="AND">AND</option>
                  <option value="OR">OR</option>
                  <option value="NOT">NOT</option>
                </select>
                
                <br>
                <input type="text" id="search-input-3" name="search" class="search-input">
                <label for="operator-3">Operator 3:</label>
                <select id="operator-3" class="operator-input">
                  <option value=""></option>
                  <option value="AND">AND</option>
                  <option value="OR">OR</option>
                  <option value="NOT">NOT</option>
                </select>
                
                <br>
                <input type="text" id="search-input-4" name="search" class="search-input">
                <label for="operator-4">Operator 4:</label>
                <select id="operator-4" class="operator-input">
                  <option value=""></option>
                  <option value="AND">AND</option>
                  <option value="OR">OR</option>
                  <option value="NOT">NOT</option>
                </select>
                
                <br>
                <input type="text" id="search-input-5" name="search" class="search-input">
                <label for="operator-5">Operator 5:</label>
                <select id="operator-5" class="operator-input">
                  <option value=""></option>
                  <option value="AND">AND</option>
                  <option value="OR">OR</option>
                  <option value="NOT">NOT</option>
                </select>
                
                <br>
                <button type="button" id="AScancel-btn">Cancel</button>
                <button type="submit" id="advance-search-submit">Search</button>
              </form>
            </div>
          </div>



          <div id="category-buttons">
            {{#each CategoryBtns}}            
              {{#if isActive}}            
                <a class="btn btn-primary page-button" href="?page=1&category={{value}}" role="button">{{value}}</a>
              {{else}}
                <a class="btn btn-secondary page-button page-inactive-button" href="?page=1&category={{value}}" role="button">{{value}}</a>              
              {{/if}}
            {{/each}}
          </div>
          
         <nav class="pagination-nav" aria-label="Page navigation">
          <ul class="pagination">
            <li class="page-item {{#unless hasPrevPage}}disabled{{/unless}}">
              <a class="page-link" href="?page=1{{#if currentCategory}}&category={{currentCategory}}{{/if}}" aria-label="First">
                <span aria-hidden="true">First Page</span>
                <span class="sr-only">First</span>
              </a>
            </li>

            {{#if hasPrevPage}}
            <li class="page-item">
              <a class="page-link" href="?page={{prevPage}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}" aria-label="Previous">
                <span aria-hidden="true">Previous</span>
                <span class="sr-only">Previous</span>
              </a>
            </li>
            {{/if}}

            {{#each pages}}
            <li class="page-item {{#if isActive}}active{{/if}}">
              <a class="page-link" href="?page={{page}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}">{{page}}</a>
            </li>
            {{/each}}

            {{#if hasNextPage}}
            <li class="page-item">
              <a class="page-link" href="?page={{nextPage}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}" aria-label="Next">
                <span aria-hidden="true">Next</span>
                <span class="sr-only">Next</span>
              </a>
            </li>
            {{/if}}

            <li class="page-item {{#unless hasNextPage}}disabled{{/unless}}">
              <a class="page-link" href="?page={{lastPage}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}" aria-label="Last">
                <span aria-hidden="true">Last Page</span>
                <span class="sr-only">Last</span>
              </a>
            </li>
          </ul>
        </nav>



          <div id="news">
            {{#each articles}}
            <div class="article">
              <img src="{{this.urlToImage}}"/>
              <h4>{{this.title}}</h4>
              <p>{{this.description}}</p>
              <p class="category">Category: {{category2}}</p>
              <p class ="published-date">Published Date: {{this.publishedAt}}</p>
              <a href="{{this.url}}">Read more</a>
            </div>
            {{/each}}
          </div>
        </section>

        <nav class="pagination-nav" aria-label="Page navigation">
          <ul class="pagination">
            <li class="page-item {{#unless hasPrevPage}}disabled{{/unless}}">
              <a class="page-link" href="?page=1{{#if currentCategory}}&category={{currentCategory}}{{/if}}" aria-label="First">
                <span aria-hidden="true">First Page</span>
                <span class="sr-only">First</span>
              </a>
            </li>

            {{#if hasPrevPage}}
            <li class="page-item">
              <a class="page-link" href="?page={{prevPage}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}" aria-label="Previous">
                <span aria-hidden="true">Previous</span>
                <span class="sr-only">Previous</span>
              </a>
            </li>
            {{/if}}

            {{#each pages}}
            <li class="page-item {{#if isActive}}active{{/if}}">
              <a class="page-link" href="?page={{page}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}">{{page}}</a>
            </li>
            {{/each}}

            {{#if hasNextPage}}
            <li class="page-item">
              <a class="page-link" href="?page={{nextPage}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}" aria-label="Next">
                <span aria-hidden="true">Next</span>
                <span class="sr-only">Next</span>
              </a>
            </li>
            {{/if}}

            <li class="page-item {{#unless hasNextPage}}disabled{{/unless}}">
              <a class="page-link" href="?page={{lastPage}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}" aria-label="Last">
                <span aria-hidden="true">Last Page</span>
                <span class="sr-only">Last</span>
              </a>
            </li>
          </ul>
        </nav>

        
      </main>
    </div>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

<script>
     const advanceSearchModal = document.getElementById('advance-search-modal');
    const advanceSearchBtn = document.getElementById('advanced-search-btn');
    const advanceSearchForm = document.getElementById('advance-search-form');


    const operatorInputs = document.querySelectorAll('.operator-input');
    const searchInputs = document.querySelectorAll('.search-input');

    const clearForm = () => {
      const form = document.getElementById('advance-search-form');
      form.reset();
    }

    const closeModal = () => {
      const modal = document.getElementById('advance-search-modal');
      modal.style.display = 'none';
      clearForm();
    }

    // Close modal when x is clicked
    const AScloseBtn = document.querySelector('.ASclose');
    AScloseBtn.addEventListener('click', closeModal);

    // Close modal when cancel button is clicked
    const AScancelBtn = document.querySelector('#AScancel-btn');
    AScancelBtn.addEventListener('click', closeModal);



    // Check if search input is required based on operator value
    const checkRequired = (index) => {
      if (operatorInputs[index].value !== '') {
        searchInputs[index + 1].setAttribute('required', '');
      } else {
        searchInputs[index + 1].removeAttribute('required');
      }
    }

    // Add event listener to operator inputs
    operatorInputs.forEach((input, index) => {
      input.addEventListener('change', () => {
        checkRequired(index);
      });
    });


    advanceSearchBtn.addEventListener('click', () => {
      advanceSearchModal.style.display = 'block';
      
    });

    window.addEventListener('click', (event) => {
      if (event.target === advanceSearchModal) {
        advanceSearchModal.style.display = 'none';
      }
    });

    advanceSearchForm.addEventListener('submit', async (event) => {
      event.preventDefault();

      const searchInput = document.getElementById('search-input').value;
      const operator1 = document.getElementById('operator-1').value;
      const searchInput1 = document.getElementById('search-input-1').value;
      const operator2 = document.getElementById('operator-2').value;
      const searchInput2 = document.getElementById('search-input-2').value;
      const operator3 = document.getElementById('operator-3').value;
      const searchInput3 = document.getElementById('search-input-3').value;
      const operator4 = document.getElementById('operator-4').value;
      const searchInput4 = document.getElementById('search-input-4').value;
      const operator5 = document.getElementById('operator-5').value;
      const searchInput5 = document.getElementById('search-input-5').value;

      const searchQuery = `${searchInput},${operator1},${searchInput1},${operator2},${searchInput2},${operator3},${searchInput3},${operator4},${searchInput4},${operator5},${searchInput5}`;

      const url = `/search/advance/${searchQuery}`;

      try {
        const response = await fetch(url);

        // Check if the response status is 404
        if (response.status === 404) {
          clearForm();
          alert('Sorry, no articles found.');
          return;
        }
        
        const data = await response.json();

        
        // Save the search results for pagination
        searchResults = data.articles;

        // Display the first page of search results in the modal
        currentPage = 1;
        displaySearchResults(currentPage);
        updatePaginationButtons();

        // Show the search modal
        const searchModal = document.getElementById('search-modal');
        searchModal.style.display = 'block';

        // Hide the advance search modal
        const advanceSearchModal = document.getElementById('advance-search-modal');
        advanceSearchModal.style.display = 'none';
        //clearForm();
      } catch (error) {
        console.error(error);
      }
    });




    </script>
    <script>
      const resultsPerPage = 10; // Change this to adjust the number of articles per page
      let currentPage = 1;
      let searchResults = [];

      function displaySearchResults(pageNumber) {
        const startIndex = (pageNumber - 1) * resultsPerPage;
        const endIndex = startIndex + resultsPerPage;
        const currentPageResults = searchResults.slice(startIndex, endIndex);

        // Display the current page of search results in the modal
        const searchResultsContainer = document.getElementById('search-results');
        searchResultsContainer.innerHTML = '';

      if (currentPageResults.length === 0) {
        const noResultsMessage = document.createElement('p');
        noResultsMessage.textContent = 'Sorry, no articles found.';
        searchResultsContainer.appendChild(noResultsMessage);
        return;
      }

      function createArticleElement(article) {
      const articleElement = document.createElement('div');
      articleElement.classList.add('article');
      articleElement.innerHTML = `
          <img src="${article.urlToImage}" />
          <h4>${article.title}</h4>
          <p>${article.description}</p>
          <p class="published-date">Published Date: ${article.publishedAt}</p>
          <a href="${article.url}">Read more</a>
        `;
        return articleElement;
      }

        currentPageResults.forEach((article) => {
          const articleElement = createArticleElement(article);
          searchResultsContainer.appendChild(articleElement);
        });

        // Update the page number displayed in the pagination buttons
        const pageNumberElement = document.getElementById('page-number');
        pageNumberElement.textContent = `Page ${currentPage}`;
      }

      function updatePaginationButtons() {
        const previousPageButton = document.getElementById('previous-page');
        const nextPageButton = document.getElementById('next-page');

        if (currentPage === 1) {
          previousPageButton.disabled = true;
        } else {
          previousPageButton.disabled = false;
        }

        if (currentPage === Math.ceil(searchResults.length / resultsPerPage)) {
          nextPageButton.disabled = true;
        } else {
          nextPageButton.disabled = false;
        }
      }

      // Event listeners for the pagination buttons
      const previousPageButton = document.getElementById('previous-page');
      previousPageButton.addEventListener('click', () => {
        currentPage--;
        displaySearchResults(currentPage);
        updatePaginationButtons();
      });

      const nextPageButton = document.getElementById('next-page');
      nextPageButton.addEventListener('click', () => {
        currentPage++;
        displaySearchResults(currentPage);
        updatePaginationButtons();
      });

      const searchForm = document.getElementById('search-form');

   searchForm.addEventListener('submit', async (event) => {
  event.preventDefault();
  const searchTerm = event.target.elements.search.value;

  // Make a GET request to the /search endpoint with the search term as a query parameter
  const response = await fetch(`/search/${searchTerm}`);

  // Check if the response status is 404
  if (response.status === 404) {
    alert('Sorry, no articles found.');
    searchForm.reset();
    location.reload();
    const searchResultsContainer = document.getElementById('search-results');
    searchResultsContainer.innerHTML = '';
    return;
  }


  // Get the JSON data from the response
  const data = await response.json();

  // Save the search results for pagination
  searchResults = data.articles;

  // Display the first page of search results in the modal
  currentPage = 1;
  displaySearchResults(currentPage);
  updatePaginationButtons();

  // Show the search modal
  const searchModal = document.getElementById('search-modal');
  searchModal.style.display = 'block';

   searchForm.reset();
});


      const searchModal = document.getElementById('search-modal');
      const searchResultsDiv = document.getElementById('search-results');
      const exitBtn = document.getElementById('exit-btn');

      exitBtn.addEventListener('click', () => {
        searchResultsDiv.innerHTML = '';
        const searchForm = document.getElementById('search-form');
        searchForm.reset();
        searchModal.style.display = 'none';
        location.reload();
      });

      
      
      const exitBtn2 = document.getElementById('exit-btn-2');

      exitBtn2.addEventListener('click', () => {
        searchResultsDiv.innerHTML = '';
        const searchForm = document.getElementById('search-form');
        searchForm.reset();
        searchModal.style.display = 'none';
        location.reload();
      });



    </script>

    <script>
      // Get the refresh button element
      const refreshButton = document.getElementById('refresh-button');

      // Add a click event listener to the refresh button
      refreshButton.addEventListener('click', function() {
        // Make an AJAX request to the /homerefresh endpoint
        const xhr = new XMLHttpRequest();
        xhr.open('POST', '/homerefresh');
        xhr.send();

        // Reload the page after the AJAX request is complete
        xhr.addEventListener('load', function() {
          location.reload();
        });
      });
    </script>

    <script>
        const datetimeElement = document.getElementById('datetime');
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const datetime = new Date().toLocaleDateString('en-US', options);
        datetimeElement.textContent = datetime;
    </script>
  
  </body>
</html>
